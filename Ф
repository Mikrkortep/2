Пример кода для инициализации CAN порта на ножках PB5 и PB6 для STM32:

```

#include "stm32f4xx.h"

void CAN_Init(void)

{

    // Включаем тактирование GPIOB и CAN1

    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;

    RCC->APB1ENR |= RCC_APB1ENR_CAN1EN;

    

    // Настраиваем ножки PB5 и PB6 на альтернативную функцию CAN

    GPIOB->AFR[0] |= (GPIO_AF9_CAN1 << 20); // PB5

    GPIOB->AFR[0] |= (GPIO_AF9_CAN1 << 24); // PB6

    GPIOB->MODER |= GPIO_MODER_MODE5_1 | GPIO_MODER_MODE6_1; // Альтернативная функция

    

    // Настраиваем CAN

    CAN1->MCR |= CAN_MCR_INRQ; // Входим в режим инициализации

    while (!(CAN1->MSR & CAN_MSR_INAK)); // Ждем подтверждения режима

    

    CAN1->BTR |= (5 << CAN_BTR_TS1_Pos) | (1 << CAN_BTR_TS2_Pos) | CAN_BTR_BRP; // Настраиваем скорость передачи

    CAN1->MCR &= ~CAN_MCR_INRQ; // Выходим из режима инициализации

    while (CAN1->MSR & CAN_MSR_INAK); // Ждем выхода из режима

}

``` 

Здесь мы сначала включаем тактирование порта GPIOB и модуля CAN1. Затем настраиваем ножки PB5 и PB6 на альтернативную функцию CAN. Далее входим в режим инициализации CAN, настраиваем скорость передачи данных и выходим из режима инициализации.

Обратите внимание, что в данном примере используются регистры модуля CAN1 и GPIO порта B без использования HAL библиотеки.

Для сброса диалога введите команду /context
